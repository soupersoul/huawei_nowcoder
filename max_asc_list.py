import traceback
import numpy as np

def ascMax(arr):
    le = len(arr)
    maxlen = [1] * le
    for i in range(le):
        for j in range(i):
            if arr[i] > arr[j]:
                maxlen[i] = max(maxlen[i], maxlen[j] + 1)
    return np.array(maxlen)

def descMax(arr):
    le = len(arr)
    maxlen = [1] * le
    for i in range(le-1, -1, -1):
        for j in range(le-1, i, -1):
            if arr[i] > arr[j]:
                maxlen[i] = max(maxlen[i], maxlen[j] + 1)
    return np.array(maxlen)

while True:
    try:
        i
        arr = list(map(int, i.split(" ")))
        pos = ascMax(arr)
        rev = descMax(arr)
        print(max(pos + rev) - 1)
        break
    except Exception as e:
        print(e)
        break