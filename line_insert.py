m=94
n=72
d=[[89,88],[92,26],[7,84],[11,1],[56,25],[66,84],
     [4,58],[13,102],[15,98],[29,46],[10,84],[63,94],
     [56,77],[33,11],[22,56],[84,63]]
x = '38 88 82 88 83 13 11 50 103 23 15 35 38 75 39 25 24 4 77 40 68 98 78 98 90 45 74 44 12 84 102 76 48 73 85 5 49 79 78 58 42 32 41 71 44 60 29 64 61 34 35 101 78 23 38 98 34 42 49 10 34 98 33 62 74 40 7 12 44 39 39 35 12 22 97 60 75 36 15 2 82 61 7 79 28 48 48 14 44 96 82 59 99 14 67 75 75 82 9 19 13 15 13 48 9 10 17 89 19 66 29 16 64 33 28 38 69 29 2 92 96 97 41 64 65 20 99 98 88 27 33 17 55 80 93 36 52 86 26 36 2 33 26 6 3 19 17 91 93 8 98 13 80 93 46 82 79 50 77 96 4 100 26 16 60 39 3 20 31 64 68 68 90 97 32 24 75 65 81 31 20 57 14 19 50 101 64 73'.split()
d = []
for i in range(0, len(x), 2):
    d.append([int(x[i]), int(x[i+1])])


def fix_line_insert(d, n):
    re = []
    index_sets = []
    for i in range(len(d)-1):
        #if d[i][0] in index_sets:
        #    continue
        re.append(d[i])
        index_sets.append(d[i][0])
        dist = d[i+1][0] - d[i][0]
        if dist > 1:
            dist_aver = int((d[i+1][1] - d[i][1]) / dist)
            for k in range(1, dist):
                val = d[i][1] + dist_aver * k
                re.append([d[i][0] + k, val])
    re.append(d[-1])
    return re

re = fix_line_insert(d, n)
for p in re:
    print("{} {}".format(p[0], p[1]))